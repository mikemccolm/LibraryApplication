#pragma checksum "C:\Users\mikem\Documents\home\GITSTUFF\LibraryApplication\application\Pages\Inventory.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "3924b3aaa21987f76231af317e4749273130a95b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(LibraryApplication.Pages.Pages_Inventory), @"mvc.1.0.razor-page", @"/Pages/Inventory.cshtml")]
namespace LibraryApplication.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\mikem\Documents\home\GITSTUFF\LibraryApplication\application\Pages\_ViewImports.cshtml"
using LibraryApplication;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\mikem\Documents\home\GITSTUFF\LibraryApplication\application\Pages\Inventory.cshtml"
using Microsoft.AspNetCore.Mvc.RazorPages;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\mikem\Documents\home\GITSTUFF\LibraryApplication\application\Pages\Inventory.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\mikem\Documents\home\GITSTUFF\LibraryApplication\application\Pages\Inventory.cshtml"
using FireSharp.Config;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\mikem\Documents\home\GITSTUFF\LibraryApplication\application\Pages\Inventory.cshtml"
using FireSharp.Interfaces;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\mikem\Documents\home\GITSTUFF\LibraryApplication\application\Pages\Inventory.cshtml"
using FireSharp.Response;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3924b3aaa21987f76231af317e4749273130a95b", @"/Pages/Inventory.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1d8ba76c81e21604f1ad934a3db2a350d4b32be1", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Inventory : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "add", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "del", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-page-handler", "edit", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
            WriteLiteral("\r\n<h2 class = \"text-center\">LIBRARY APPLICATION - Edit Inventory</h2>\r\n<hr/>\r\n<div class = \"text-right\">\r\n<p>");
#nullable restore
#line 153 "C:\Users\mikem\Documents\home\GITSTUFF\LibraryApplication\application\Pages\Inventory.cshtml"
Write(Model.emailMessage);

#line default
#line hidden
#nullable disable
            WriteLiteral("</p>\r\n</div>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3924b3aaa21987f76231af317e4749273130a95b5831", async() => {
                WriteLiteral(@" 
    <div class = ""text-center"">
    <!-- Edit Inventory -->
        <h5>Edit Inventory:</h5>
        <!-- Change Quantity -->
        <h6>Change Quantity</h6>
        <label>Title:</label>
        <input type = ""text"" name = ""changeTitle""/>
        <label>QTY:</label>
        <input type = ""text"" name = ""changeQty""/>
        <select name = ""way"">
            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3924b3aaa21987f76231af317e4749273130a95b6472", async() => {
                    WriteLiteral("ADD");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3924b3aaa21987f76231af317e4749273130a95b7704", async() => {
                    WriteLiteral("DELETE");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
        </select>
        <button>Submit</button>
        <!-- Delete Book -->
        <h6>Delete Book</h6>
        <label>Title:</label>
        <input type = ""text"" name = ""delTitle""/>
        <button>Submit</button>
        <!-- Add Book -->
        <h6>Add Book</h6>
        <label>Title:</label>
        <input type = ""text"" name = ""addTitle""/>
        <label>Author(s):</label>
        <input type = ""text"" name = ""addAuthor""/>
        <button>Submit</button>
        <br/><br/>
        <p>");
#nullable restore
#line 183 "C:\Users\mikem\Documents\home\GITSTUFF\LibraryApplication\application\Pages\Inventory.cshtml"
      Write(Model.changeIdMessage);

#line default
#line hidden
#nullable disable
                WriteLiteral("</p>\r\n        <p>");
#nullable restore
#line 184 "C:\Users\mikem\Documents\home\GITSTUFF\LibraryApplication\application\Pages\Inventory.cshtml"
      Write(Model.deleteIdMessage);

#line default
#line hidden
#nullable disable
                WriteLiteral("</p>\r\n        <p>");
#nullable restore
#line 185 "C:\Users\mikem\Documents\home\GITSTUFF\LibraryApplication\application\Pages\Inventory.cshtml"
      Write(Model.addIdMessage);

#line default
#line hidden
#nullable disable
                WriteLiteral("</p>\r\n    </div>\r\n    <hr/>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.PageHandler = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
        }
        #pragma warning restore 1998
#nullable restore
#line 9 "C:\Users\mikem\Documents\home\GITSTUFF\LibraryApplication\application\Pages\Inventory.cshtml"
            
    //work: new book
    public class Work{
        public string authors = "";
        public string title = "";
        public List<string> copies = new List<string>();
        //mutator, change values
        public void setValsAdd(string authorsIn, string titleIn, List<string> copiesIn){
            authors = authorsIn;
            title = titleIn;
            copies = copiesIn;
            if (copies.Count == 0){
                copies.Add("0");
            }
        }
    }
    //book: new physical copy of book
    public class Book{
        public string id = "";
        public string status = "";
        public string title = "";
        public string author = "";
        public string history = "";
        //mutator, change values
        public void setVals(string idIn, string titleIn, string authorIn){
            Console.WriteLine(titleIn);
            id = idIn;
            title = titleIn;
            history = ".";
            author = authorIn;

        }

    }
    public class IndexModel : PageModel
    {
        public string emailMessage { get; set; } = "Logged in as: NONE";
        public string changeIdMessage {get;set;} = "";

        public string addIdMessage {get;set;} = "";
        public string deleteIdMessage {get;set;} = "";

        public string email {get;set;} = "";
        public void OnPostEdit(string changeTitle, string changeQty, string delTitle, string addTitle, string addAuthor, string way)
        {
            //change inventory
            changeInventory(changeTitle, changeQty, delTitle, addTitle, addAuthor, way);
        }
        public void OnGetAsync(){
            //get initial email
            email = HttpContext.Session.GetString("_Email");
            emailMessage = $"Logged in as: {email}"; 
        }

        public void changeInventory(string changeTitle, string changeQty, string delTitle, string addTitle, string addAuthor,string way){
            //change inventory
            if(!String.IsNullOrEmpty(changeTitle) && !String.IsNullOrEmpty(changeQty)){
                changeIdMessage = "Added " + changeQty + " of book " + changeTitle;
                //add new copies of work (books)
                dbWrite(1,changeTitle,"",changeQty,way);
            }
            if(!String.IsNullOrEmpty(delTitle)){
                //delete work
                deleteIdMessage = "Deleted title: " + delTitle;
                dbWrite(2,delTitle,"","","");
            }
            if(!String.IsNullOrEmpty(addTitle)){
                //add work
                addIdMessage = "Added title: " + addTitle;
                dbWrite(3,addTitle, addAuthor,"","");
            } 
        }
         public async void dbWrite(int action, string title, string author, string qty, string way){
             //connect to database
            IFirebaseConfig config = new FirebaseConfig
            {
                AuthSecret = "1YwwPshIwO1oaE0PgpyCJc7cG5CMezZovmE7TDTw",
                BasePath = "https://library-application-5c7df.firebaseio.com/"
            };
            IFirebaseClient client;
            client = new FireSharp.FirebaseClient(config);
            if (action == 1){
                //create new copies, write to both works table and create new books entry
                Random rnd = new Random();
                FirebaseResponse response = await client.GetAsync("Works/"+title);
                Work obj = response.ResultAs<Work>();
                List<string> tempCopies = new List<string>();
                for (int i = 0;i<obj.copies.Count;i++){
                    tempCopies.Add(obj.copies[i]);
                }
                var q = Convert.ToInt32(qty); // returns short
                Console.WriteLine(way);
                //if adding copies (QTY should be integer)
                if (way.Equals("add"))
                {
                    for (int i = 0;i<q;i++){
                        //range this big serves as unique number generator to avoid another postback
                        var tempID = rnd.Next(100000000,999999999);
                        tempCopies.Add(tempID.ToString());
                        var data2 = new Book();
                        data2.setVals(tempID.ToString(),title, obj.authors);
                        SetResponse response2 = await client.SetAsync("Books/"+tempID.ToString(),data2);
                    }
                }
                //if deleting copies (QTY should be integer)
                else if (way.Equals("del") && q<=obj.copies.Count-1){
                    for (int i = 0;i<Math.Abs(q);i++){
                        var tempID = tempCopies[1];
                        //remove from books
                        await client.DeleteAsync("Books/"+tempID);
                        tempCopies.RemoveAt(1);
                    }
                }
                //write new copies to Works
                var data = new Work();
                data.setValsAdd(obj.authors, title,tempCopies);
                SetResponse response3 = await client.SetAsync("Works/"+title,data);
            }
            //delete work and all associated books
            else if (action ==2){
                FirebaseResponse response = await client.GetAsync("Works/"+title);
                Work obj = response.ResultAs<Work>();
                for (int i = 1;i<obj.copies.Count;i++){
                    //delete all book instances related to copies
                    await client.DeleteAsync("Books/"+obj.copies[i]);
                }//delete from works
                await client.DeleteAsync("Works/"+title);
            }
            else if(action == 3){
                //create new work
                var data = new Work();
                List<string> copies = new List<string>();
                data.setValsAdd(author, title,copies);
                SetResponse response = await client.SetAsync("Works/"+title,data);
                Work result = response.ResultAs<Work>();  
            }
     
        }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IndexModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel>)PageContext?.ViewData;
        public IndexModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
